# BurnMan - a lower mantle toolkit
# Copyright (C) 2012, 2013, Heister, T., Unterborn, C., Rose, I. and Cottaar, S.
# Released under GPL v2 or later.

"""
HP_2011 (ds-62)
Minerals from Holland and Powell 2011 and references therein
Update to dataset version 6.2
The values in this document are all in S.I. units,
unlike those in the original tc-ds62.txt
File autogenerated using HPdata_to_burnman.py
"""

from burnman.mineral import Mineral
from burnman.processchemistry import read_masses, dictionarize_formula, formula_mass

atomic_masses=read_masses()


"""
ENDMEMBERS
"""


class iron (Mineral):
    def __init__(self):
        formula='Fe1.0'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'HP_2011_ds62 iron (BCC, sort of)',
            'formula': formula,
            'equation_of_state': 'hp_tmt',
            'H_0': -0.0 ,
            'S_0': 27.09 ,
            'V_0': 7.09e-06 ,
            'Cp': [46.2, 0.005159, 723100.0, -556.2] ,
            'a_0': 3.56e-05 ,
            'K_0': 1.64e+11 ,
            'Kprime_0': 5.16 ,
            'Kdprime_0': -3.1e-11 ,
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula, atomic_masses),
            'landau_Tc': 1042.0 ,
            'landau_Smax': 8.3 ,
            'landau_Vmax': 0.0 }
        Mineral.__init__(self)


class hcp_iron (Mineral):
    def __init__(self):
        formula='Fe1.0'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'HCP iron (RM 12/2014)',
            'formula': formula,
            'equation_of_state': 'hp_tmt',
            'H_0': 5050. ,
            'S_0': 29.90 ,
            'V_0': 6.733e-06 ,
            'Cp': [52.2754, -0.000355, 790700.0, -619.1] ,
            'a_0': 4.29e-05 ,
            'K_0': 1.85827e+11 ,
            'Kprime_0': 4.37 ,
            'Kdprime_0': -2.35e-11 ,
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula, atomic_masses)}
        Mineral.__init__(self)

class fcc_iron (Mineral):
    def __init__(self):
        formula='Fe1.0'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'FCC iron (RM 12/2014)',
            'formula': formula,
            'equation_of_state': 'hp_tmt',
            'H_0': 7840. ,
            'S_0': 35.85 ,
            'V_0': 6.938e-06 ,
            'Cp': [52.2754, -0.000355, 790700.0, -619.1] ,
            'a_0': 5.13e-05 ,
            'K_0': 1.532e+11 ,
            'Kprime_0': 5.3 ,
            'Kdprime_0': -2.70e-11 ,
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula, atomic_masses)}
        Mineral.__init__(self)



