# This file is part of BurnMan - a thermoelastic and thermodynamic toolkit for the Earth and Planetary Sciences
# Copyright (C) 2012 - 2017 by the BurnMan team, released under the GNU
# GPL v2 or later.


"""
BOZA_2017
Minerals from Belmonte et al. 2017 and references therein
File autogenerated using Belmonte_to_burnman.py
"""

from __future__ import absolute_import

from ..mineral import Mineral
from ..solidsolution import SolidSolution
from ..solutionmodel import *
from ..processchemistry import dictionarize_formula, formula_mass


class MgO_liquid (Mineral):
    def __init__(self):
        formula = 'MgO'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'MgO_liquid',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -563716.5,
            'S_0': 16.725,
            'C_p': np.array([72.708, 0.0018183, -1312400.0,
                             -256.27, 308990000.0, 3.79074e-07,
                             -3.8084e-11, 0.0]),
            'V_0': 1.141e-05,
            'K_0': 35300000000.0,
            'Kprime_0': 4.81,
            'dKdT': 0.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([-5.514e-09, 0.0001088,
                               0.008412, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class Al2O3_liquid (Mineral):
    def __init__(self):
        formula = 'Al2O3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'Al2O3_liquid',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1640115.0,
            'S_0': 6.363,
            'C_p': np.array([167.75, 0.0043878, -5955100.0,
                             210.18, 533200000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 3.7392e-05,
            'K_0': 5485000000.0,
            'Kprime_0': 19.5,
            'dKdT': 0.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([-2.145e-09, 5.482e-05,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class SiO2_liquid (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'SiO2_liquid',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -911746.2,
            'S_0': 33.887,
            'C_p': np.array([88.455, -0.00300137, -4852700.0,
                             -114.33, 728290000.0, 7.1332e-07,
                             5.9239e-12, 0.0]),
            'V_0': 2.7872e-05,
            'K_0': 5000000000.0,
            'Kprime_0': 15.8,
            'dKdT': 0.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([-3.611e-08, 8.431e-05,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class corundum (Mineral):
    def __init__(self):
        formula = 'Al2O3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'corundum',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1675700.0,
            'S_0': 51.4,
            'C_p': np.array([116.63, 0.016986, -3232300.0,
                             -104.16, 0.0, -2.8581e-06,
                             0.0, 0.0]),
            'V_0': 2.5575e-05,
            'K_0': 2.54979e+11,
            'Kprime_0': 4.2,
            'dKdT': -39000000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([-8e-10, 4.196e-05,
                               -0.011406, 1.0623, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class mullite (Mineral):
    def __init__(self):
        formula = 'Al6Si2O13'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'mullite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -6820400.0,
            'S_0': 274.889,
            'C_p': np.array([634.81, 0.0, -17209900.0,
                             -3373.5, 2122740000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 0.0001346,
            'K_0': 1.683e+11,
            'Kprime_0': 4.0,
            'dKdT': -17500000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([0.0, 1.67e-05,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class andalusite (Mineral):
    def __init__(self):
        formula = 'Al2SiO5'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'andalusite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2589972.0,
            'S_0': 91.434,
            'C_p': np.array([236.48, 0.0, -7526800.0,
                             -1102.9, 936440000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 5.152e-05,
            'K_0': 1.4979e+11,
            'Kprime_0': 4.0,
            'dKdT': -33700000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0004,
            'alpha': np.array([3.391e-09, 4.14736e-05,
                               -0.0133905, 1.8129, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class kyanite (Mineral):
    def __init__(self):
        formula = 'Al2SiO5'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'kyanite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2594220.0,
            'S_0': 82.43,
            'C_p': np.array([262.68, 0.0, -1999700.0,
                             -2001.4, -63180000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 4.415e-05,
            'K_0': 1.49068e+11,
            'Kprime_0': 4.0,
            'dKdT': -28600000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0006,
            'alpha': np.array([-2.06e-10, 5.39802e-05,
                               -0.0150528, 1.553, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class sillimanite (Mineral):
    def __init__(self):
        formula = 'Al2SiO5'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'sillimanite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2586091.0,
            'S_0': 95.93,
            'C_p': np.array([256.73, 0.0, -2977400.0,
                             -1887.2, 250960000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 4.986e-05,
            'K_0': 1.538537e+11,
            'Kprime_0': 4.0,
            'dKdT': -22700000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0004,
            'alpha': np.array([7.127e-09, 3.489e-05,
                               -0.011213, 1.38154, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class alpha_quartz (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'alpha_quartz',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -910699.9,
            'S_0': 41.46,
            'C_p': np.array([80.012, 0.0, -3546680.0,
                             -240.276, 491570000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 2.2688e-05,
            'K_0': 39128000000.0,
            'Kprime_0': 6.4,
            'dKdT': -190000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([2.9868e-08, 2.7513e-05,
                               5.6e-06, 0.0912, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class beta_quartz (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'beta_quartz',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -908626.8,
            'S_0': 44.207,
            'C_p': np.array([80.012, 0.0, -3546680.0,
                             -240.276, 491570000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 2.2875e-05,
            'K_0': 51495000000.0,
            'Kprime_0': 5.3,
            'dKdT': -13530000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([3.4694e-08, 2.06036e-05,
                               0.0001307, -1.6376, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class tridymite (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'tridymite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -907045.0,
            'S_0': 45.524,
            'C_p': np.array([75.37, 0.0, -5958100.0,
                             0.0, 958250000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 2.737e-05,
            'K_0': 26316000000.0,
            'Kprime_0': 6.0,
            'dKdT': 0.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([-2.80434e-07, 0.000234923,
                               -0.01075, 0.12793, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class beta_cristobalite (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'beta_cristobalite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -906377.2,
            'S_0': 46.029,
            'C_p': np.array([83.514, 0.0, -2455360.0,
                             -374.693, 280070000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 2.5739e-05,
            'K_0': 20696000000.0,
            'Kprime_0': 6.0,
            'dKdT': 0.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([4.0248e-09, 2.43616e-05,
                               0.0275739, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class coesite (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'coesite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -906900.0,
            'S_0': 40.5,
            'C_p': np.array([78.0, 0.0, -3100000.0,
                             0.0, 585800000.0, 0.0,
                             0.0, -6689.0]),
            'V_0': 2.064e-05,
            'K_0': 92879000000.0,
            'Kprime_0': 8.4,
            'dKdT': -9100000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([5e-09, 5.43e-06,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class stishovite (Mineral):
    def __init__(self):
        formula = 'SiO2'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'stishovite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -874865.0,
            'S_0': 27.809,
            'C_p': np.array([59.945, -0.013967, -22034000.0,
                             1109.7, 4497200000.0, 9.1326e-06,
                             -1.3264e-09, 0.0]),
            'V_0': 1.4e-05,
            'K_0': 2.55e+11,
            'Kprime_0': 6.59,
            'dKdT': -34500000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([5.904e-09, 1.6777e-05,
                               0.0022872, -2.1518, 237.0245]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class periclase (Mineral):
    def __init__(self):
        formula = 'MgO'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'periclase',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -601400.0,
            'S_0': 26.012,
            'C_p': np.array([36.19, 0.0094773, -2385300.0,
                             271.93, 228010000.0, -1.1724e-06,
                             1.4495e-10, 0.0]),
            'V_0': 1.125e-05,
            'K_0': 1.595039e+11,
            'Kprime_0': 4.04,
            'dKdT': -29690000.0,
            'd2KdT2': 2048.0,
            'dKprimedT': 0.0,
            'alpha': np.array([1.183664e-08, 3.013735e-05,
                               0.00449044, -2.5022, 241.716]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class lp_clinoenstatite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'lp_clinoenstatite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1545926.0,
            'S_0': 66.325,
            'C_p': np.array([139.96, 0.0, -4400200.0,
                             -497.0, 535710000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 3.131e-05,
            'K_0': 1.111e+11,
            'Kprime_0': 6.6,
            'dKdT': -21000000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([1e-08, 2.78e-05,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class orthoenstatite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'orthoenstatite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1545552.0,
            'S_0': 66.17,
            'C_p': np.array([166.58, 0.0, -2270600.0,
                             -1200.6, 279150000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 3.133e-05,
            'K_0': 1.05798e+11,
            'Kprime_0': 8.5,
            'dKdT': -20600000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0015,
            'alpha': np.array([1e-08, 2.78e-05,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class protoenstatite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'protoenstatite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1543959.0,
            'S_0': 67.438,
            'C_p': np.array([166.58, 0.0, -2270600.0,
                             -1200.6, 279150000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 3.242e-05,
            'K_0': 1.07016e+11,
            'Kprime_0': 6.6,
            'dKdT': -20000000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([3e-09, 2.66e-05,
                               0.0, 0.0, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class hp_clinoenstatite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'hp_clinoenstatite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1543550.0,
            'S_0': 66.089,
            'C_p': np.array([109.25, 0.009526, -3847400.0,
                             179.89, 0.0, 5.365e-07,
                             0.0, 0.0]),
            'V_0': 3.1e-05,
            'K_0': 1.09706e+11,
            'Kprime_0': 5.86,
            'dKdT': -18400000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([1.596e-08, 6.77796e-06,
                               0.01889893, -6.9718, 818.75]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class akimotoite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'akimotoite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1496046.0,
            'S_0': 54.013,
            'C_p': np.array([112.54, 0.012291, -3625500.0,
                             59.56, 0.0, -3.5901e-07,
                             0.0, 0.0]),
            'V_0': 2.6354e-05,
            'K_0': 2.077084e+11,
            'Kprime_0': 4.54,
            'dKdT': -27900000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([1.0997e-08, 8.295646e-06,
                               0.01799057, -8.0792, 1019.1]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class majorite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'majorite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1503134.0,
            'S_0': 68.506,
            'C_p': np.array([183.7, -0.017173, -914510.0,
                             -1507.3, 0.0, 4.6114e-06,
                             0.0, 0.0]),
            'V_0': 2.8573e-05,
            'K_0': 1.600962e+11,
            'Kprime_0': 4.82,
            'dKdT': -23700000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([1.3614e-08, 2.423996e-06,
                               0.0235629, -10.013, 1287.32]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class mg_perovskite (Mineral):
    def __init__(self):
        formula = 'MgSiO3'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'mg_perovskite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -1444192.0,
            'S_0': 58.698,
            'C_p': np.array([110.12, 0.0095903, -3887900.0,
                             192.59, 0.0, 9.9651e-07,
                             0.0, 0.0]),
            'V_0': 2.4318e-05,
            'K_0': 2.492e+11,
            'Kprime_0': 4.2,
            'dKdT': -28000000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([8.18e-09, 1.982e-05,
                               0.0, -0.474, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class forsterite (Mineral):
    def __init__(self):
        formula = 'Mg2SiO4'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'forsterite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2173000.0,
            'S_0': 94.1,
            'C_p': np.array([155.13, 0.021307, -4406000.0,
                             87.536, 0.0, -7.918e-07,
                             0.0, 0.0]),
            'V_0': 4.437e-05,
            'K_0': 1.308e+11,
            'Kprime_0': 4.001,
            'dKdT': -17459200.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([1.0031e-08, 2.6931e-05,
                               0.0056082, -2.6162, 243.828]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class wadsleyite (Mineral):
    def __init__(self):
        formula = 'Mg2SiO4'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'wadsleyite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2139408.0,
            'S_0': 87.3,
            'C_p': np.array([161.39, 0.02227, -4111200.0,
                             -86.514, 0.0, -2.4731e-06,
                             0.0, 0.0]),
            'V_0': 4.087e-05,
            'K_0': 1.618e+11,
            'Kprime_0': 4.415,
            'dKdT': -11799700.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([0.0, 4.64e-05,
                               -0.0138005, 3.6196, -395.09]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class ringwoodite (Mineral):
    def __init__(self):
        formula = 'Mg2SiO4'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'ringwoodite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2126979.0,
            'S_0': 81.7,
            'C_p': np.array([153.46, 0.021405, -4749000.0,
                             127.08, 0.0, -3.08e-06,
                             0.0, 0.0]),
            'V_0': 3.963e-05,
            'K_0': 1.964e+11,
            'Kprime_0': 4.322,
            'dKdT': -10410800.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([0.0, 3.23e-05,
                               -0.0073084, 1.3745, -150.406]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class anhydrous_B (Mineral):
    def __init__(self):
        formula = 'Mg14Si5O24'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'anhydrous_B',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -13195400.0,
            'S_0': 561.2,
            'C_p': np.array([975.27, 0.11177, -27102000.0,
                             352.26, 0.0, -3.9865e-06,
                             0.0, 0.0]),
            'V_0': 0.00025173,
            'K_0': 1.55e+11,
            'Kprime_0': 4.14,
            'dKdT': -18900000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([8.628e-09, 2.3086e-05,
                               0.008313, -4.3445, 528.465]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class spinel (Mineral):
    def __init__(self):
        formula = 'MgAl2O4'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'spinel',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -2300313.0,
            'S_0': 84.535,
            'C_p': np.array([235.9, 0.0, -1710400.0,
                             -1766.0, 40620000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 3.977e-05,
            'K_0': 2.161e+11,
            'Kprime_0': 4.89,
            'dKdT': -49810000.0,
            'd2KdT2': 2937.0,
            'dKprimedT': 0.0009,
            'alpha': np.array([-1.0807e-09, 6.96922e-05,
                               -0.0307991, 5.03946, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class cordierite (Mineral):
    def __init__(self):
        formula = 'Mg2Al4Si5O18'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'cordierite',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -9158727.0,
            'S_0': 417.97,
            'C_p': np.array([954.39, 0.0, -2317300.0,
                             -7962.3, -370210000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 0.00023311,
            'K_0': 1.28e+11,
            'Kprime_0': 4.0,
            'dKdT': -15300000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([9.1189e-09, 1.141058e-07,
                               -0.000366, 0.0074, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class sapphirine_351 (Mineral):
    def __init__(self):
        formula = 'Mg3Al10SiO20'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'sapphirine_351',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -11199290.0,
            'S_0': 397.6,
            'C_p': np.array([789.73, 0.0603, -9175100.0,
                             -782.1, -3184700000.0, 1.327e-05,
                             -5.1473e-09, 0.0]),
            'V_0': 0.000202387,
            'K_0': 1.7233e+11,
            'Kprime_0': 4.28,
            'dKdT': -18800000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([6.0817e-09, 1.5709e-05,
                               0.0082836, -4.3554, 547.232]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class sapphirine_442 (Mineral):
    def __init__(self):
        formula = 'Mg4Al8Si2O20'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'sapphirine_442',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -11038030.0,
            'S_0': 407.0,
            'C_p': np.array([791.61, 0.065455, -18175000.0,
                             -481.63, -915760000.0, 3.4196e-06,
                             -2.0517e-09, 0.0]),
            'V_0': 0.000204879,
            'K_0': 1.5873e+11,
            'Kprime_0': 4.68,
            'dKdT': -21020000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([9.0302e-09, 1.0411e-05,
                               0.014034, -6.4469, 814.288]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

class pyrope (Mineral):
    def __init__(self):
        formula = 'Mg3Al2Si3O12'
        formula = dictionarize_formula(formula)
        self.params = {
            'name': 'pyrope',
            'formula': formula,
            'equation_of_state': 'boza',
            'P_0': 1.e5,
            'T_0': 298.,
            'H_0': -6286548.0,
            'S_0': 266.359,
            'C_p': np.array([631.5, 0.0, 0.0,
                             -4462.0, -1260500000.0, 0.0,
                             0.0, 0.0]),
            'V_0': 0.00011316,
            'K_0': 1.66e+11,
            'Kprime_0': 4.1,
            'dKdT': -24000000.0,
            'd2KdT2': 0.0,
            'dKprimedT': 0.0,
            'alpha': np.array([2.886e-09, 2.874e-05,
                               0.0, -0.5443, 0.0]),
            'n': sum(formula.values()),
            'molar_mass': formula_mass(formula)}
        Mineral.__init__(self)

